{"version":3,"file":"static/js/186.69e296ae.chunk.js","mappings":"8NAIe,SAASA,EAAT,GAA0B,IAAPC,EAAM,EAANA,GAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIAC,QAAQC,IAAI,gBAAiBL,GAC7B,IAAMM,EAAS,mCAAG,WAAMN,GAAN,uFACOO,EAAAA,EAAAA,gBAAoBP,GAD3B,UACVQ,EADU,OAEhBJ,QAAQC,IAAIG,IACRA,EAHY,uBAIdL,EAAWK,GAJG,0BAOhBJ,QAAQC,IAAI,iBAPI,2CAAH,sDAgBf,OANAI,EAAAA,EAAAA,YAAU,WACHT,GAGLM,EAAUN,KACT,CAACA,KAEF,8BACGE,IACC,4BACE,qCACA,wBACGA,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UAEZ,uBAAID,EAAOE,YAHJF,EAAOX,SAMd,W,yEC7BDc,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+FACQC,EAAS,CACbC,IAAI,sBAFR,SAKyBC,GAAAA,CAAMF,GAL/B,uBAKUG,EALV,EAKUA,KALV,kBAQSA,EAAKC,SARd,kEAUeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,kFACQN,EAAS,CACbC,IAAI,SAAD,OAAWK,IAFlB,SAIyBJ,GAAAA,CAAMF,GAJ/B,uBAIUG,EAJV,EAIUA,KAERd,QAAQC,IAAIa,GANd,kBAOSA,GAPT,kEASeI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,kFAEQR,EAAS,CACbC,IAAI,eACJQ,OAAQ,CACNC,MAAOF,IALb,SAQyBN,GAAAA,CAAMF,GAR/B,uBAQUG,EARV,EAQUA,KARV,kBAWSA,EAAKC,SAXd,kEAaeO,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BL,GAA5B,kFAEQN,EAAS,CACbC,IAAI,SAAD,OAAWK,EAAX,aAHP,SAKyBJ,GAAAA,CAAMF,GAL/B,uBAKUG,EALV,EAKUA,KAERd,QAAQC,IAAI,OAAQa,EAAKS,MAP3B,kBAQST,EAAKS,MARd,kEAUeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BP,GAA/B,kFAEQN,EAAS,CACbC,IAAI,SAAD,OAAWK,EAAX,YACHG,OAAQ,CACNK,SAAU,UALhB,kBAS2BZ,GAAAA,CAAMF,GATjC,uBASYG,EATZ,EASYA,KAERd,QAAQC,IAAI,UAAWa,EAAKC,SAXhC,kBAYWD,EAAKC,SAZhB,2DAcW,KAAIW,SAdf,iFAhDAb,IAAAA,SAAAA,QADiB,gCAEjBA,IAAAA,SAAAA,OAAwB,CACtBc,QAJc,mCAKdF,SAAU,SA8DZ,IAAMtB,EAAM,CACVO,SAjEF,WAKeA,OAAAA,EAAAA,MAAAA,KAAAA,YA6DbM,gBA7DF,SAU+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,YAoDbE,YApDF,SAS2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,YA4CbI,aA5CF,SAa4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,YAgCbE,gBAhCF,SAU+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,aAyBf","sources":["components/Reviews/Reviews.jsx","service/MoviesApi.jsx"],"sourcesContent":["import Api from '../../service/MoviesApi';\r\nimport React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n\r\nexport default function Reviews({ id }) {\r\n  const [reviews, setReviews] = useState([]);\r\n  // const location = useLocation();\r\n  // const backHref = location.state?.from ?? '/';\r\n\r\n  console.log('props reviews', id);\r\n  const fetchData = async id => {\r\n    const response = await Api.getMovieReviews(id);\r\n    console.log(response);\r\n    if (response) {\r\n      setReviews(response);\r\n      return;\r\n    }\r\n    console.log('empty reviews');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    fetchData(id);\r\n  }, [id]);\r\n  return (\r\n    <>\r\n      {reviews && (\r\n        <div>\r\n          <h2>Reviwes</h2>\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <h2>{review.author}</h2>\r\n\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>{' '}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { func } from 'prop-types';\r\nconst API_KEY = '3b0a0f3678b03bfe7113d836939cb420';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: 'ru-Ru',\r\n};\r\n\r\nasync function trendApi() {\r\n  const config = {\r\n    url: `trending/movie/day`,\r\n  };\r\n\r\n  const { data } = await axios(config);\r\n\r\n  // console.log('response Api', data);\r\n  return data.results;\r\n}\r\nasync function getMovieDetails(movieId) {\r\n  const config = {\r\n    url: `movie/${movieId}`,\r\n  };\r\n  const { data } = await axios(config);\r\n\r\n  console.log(data);\r\n  return data;\r\n}\r\nasync function searchMovie(movieSearch) {\r\n  // console.log(movieSearch);\r\n  const config = {\r\n    url: `search/movie`,\r\n    params: {\r\n      query: movieSearch,\r\n    },\r\n  };\r\n  const { data } = await axios(config); // деструктуризируем из ответа нужное нам свойство data\r\n\r\n  // console.log(response);\r\n  return data.results; // возвращаем из свойства data свойство results/ на нем лежит массив фильмов\r\n}\r\nasync function getMovieCast(movieId) {\r\n  // console.log(movieSearch);\r\n  const config = {\r\n    url: `movie/${movieId}/credits`,\r\n  };\r\n  const { data } = await axios(config); // деструктуризируем из ответа нужное нам свойство data\r\n\r\n  console.log('cast', data.cast);\r\n  return data.cast; // возвращаем из свойства data свойство cast/ на нем лежит массив фильмов\r\n}\r\nasync function getMovieReviews(movieId) {\r\n  // console.log(movieSearch);\r\n  const config = {\r\n    url: `movie/${movieId}/reviews`,\r\n    params: {\r\n      language: 'en-Us',\r\n    },\r\n  };\r\n  try {\r\n    const { data } = await axios(config); // деструктуризируем из ответа нужное нам свойство data\r\n\r\n    console.log('reviews', data.results);\r\n    return data.results; // возвращаем из свойства data свойство results/ на нем лежит массив отзывов  content ( отзыв) и name ( имя автора)\r\n  } catch (err) {\r\n    return err.message;\r\n  }\r\n}\r\nconst Api = {\r\n  trendApi,\r\n  getMovieDetails,\r\n  searchMovie,\r\n  getMovieCast,\r\n  getMovieReviews,\r\n};\r\n\r\nexport default Api;\r\n"],"names":["Reviews","id","useState","reviews","setReviews","console","log","fetchData","Api","response","useEffect","map","review","author","content","trendApi","config","url","axios","data","results","getMovieDetails","movieId","searchMovie","movieSearch","params","query","getMovieCast","cast","getMovieReviews","language","message","api_key"],"sourceRoot":""}